plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.10.1'
    id 'io.codearte.nexus-staging' version '0.21.0'
}

subprojects {

    apply plugin: 'groovy'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8

    scmVersion {
        tag {
            prefix = ''
        }
    }

    group = 'com.github.mkopylec'
    archivesBaseName = name
    version = scmVersion.version

    repositories {
        mavenCentral()
    }

    ext {
        springBootVersion = '2.1.4.RELEASE' // TODO 2.1.5.RELEASE depends on broken reactor-netty
        resilience4jVersion = '0.15.0'
        okHttpVersion = '3.14.2'
        
        pomContent = {
            name = 'Charon Spring Boot Starter'
            description = 'Reverse proxy implementation in form of Spring Boot starter'
            url = 'https://github.com/mkopylec/charon-spring-boot-starter'
            licenses {
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id = 'mkopylec'
                    name = 'Mariusz Kopylec'
                    email = 'mariusz.kopylec@o2.pl'
                }
            }
            scm {
                connection = 'scm:git:https://github.com/mkopylec/charon-spring-boot-starter.git'
                developerConnection = 'scm:git:https://github.com/mkopylec/charon-spring-boot-starter.git'
                url = 'https://github.com/mkopylec/charon-spring-boot-starter'
            }
        }
    }

    dependencies {
        compile group: 'org.springframework', name: 'spring-web', version: '5.1.6.RELEASE'
        compile group: 'io.github.resilience4j', name: 'resilience4j-circuitbreaker', version: resilience4jVersion
        compile group: 'io.github.resilience4j', name: 'resilience4j-ratelimiter', version: resilience4jVersion
        compile group: 'io.github.resilience4j', name: 'resilience4j-retry', version: resilience4jVersion
        compile group: 'io.github.resilience4j', name: 'resilience4j-micrometer', version: resilience4jVersion
        compile group: 'io.micrometer', name: 'micrometer-core', version: '1.1.4'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
        compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
        compile group: 'commons-io', name: 'commons-io', version: '2.6'
    }

    signing {
        if (project.ext.has('signArtifacts')) {
            sign configurations.archives
        }
    }

    publishing {
        repositories {
            maven {
                def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = project.ext.has('ossrhUsername') ? project.ext.ossrhUsername : ''
                    password = project.ext.has('ossrhPassword') ? project.ext.ossrhPassword : ''
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '5.4.1'
}
